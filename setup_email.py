#!/usr/bin/env python3
"""
üìß Email Configuration Setup Script
Automated setup for SMTP email configuration
"""

import getpass
import os
import smtplib
from email.mime.text import MIMEText

def print_banner():
    print("=" * 50)
    print("üìß CONFIGURACI√ìN DE EMAIL SMTP")
    print("=" * 50)
    print()

def get_provider_config(provider, email, password):
    """Get SMTP configuration based on provider"""
    configs = {
        'gmail': {
            'smtp_server': 'smtp.gmail.com',
            'smtp_port': 587,
            'sender_email': email,
            'sender_password': password,
            'use_tls': True
        },
        'outlook': {
            'smtp_server': 'smtp-mail.outlook.com',
            'smtp_port': 587,
            'sender_email': email,
            'sender_password': password,
            'use_tls': True
        },
        'yahoo': {
            'smtp_server': 'smtp.mail.yahoo.com',
            'smtp_port': 587,
            'sender_email': email,
            'sender_password': password,
            'use_tls': True
        }
    }
    return configs.get(provider.lower())

def test_smtp_connection(config):
    """Test SMTP connection"""
    try:
        print("üîç Probando conexi√≥n SMTP...")
        server = smtplib.SMTP(config['smtp_server'], config['smtp_port'])
        server.starttls()
        server.login(config['sender_email'], config['sender_password'])
        server.quit()
        print("‚úÖ Conexi√≥n SMTP exitosa!")
        return True
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

def save_config(config):
    """Save configuration to email_config.py"""
    config_content = f"""# üìß Email Configuration
# Generated by setup_email.py

EMAIL_CONFIG = {{
    'smtp_server': '{config['smtp_server']}',
    'smtp_port': {config['smtp_port']},
    'sender_email': '{config['sender_email']}',
    'sender_password': '{config['sender_password']}',
    'use_tls': {config['use_tls']}
}}
"""
    
    try:
        with open('email_config.py', 'w') as f:
            f.write(config_content)
        print("‚úÖ Configuraci√≥n guardada en email_config.py")
        return True
    except Exception as e:
        print(f"‚ùå Error guardando configuraci√≥n: {e}")
        return False

def main():
    print_banner()
    
    # Get provider
    print("Proveedores soportados:")
    print("1. Gmail (Recomendado)")
    print("2. Outlook/Hotmail")
    print("3. Yahoo")
    print()
    
    provider = input("Selecciona tu proveedor (gmail/outlook/yahoo): ").lower()
    
    if provider not in ['gmail', 'outlook', 'yahoo']:
        print("‚ùå Proveedor no soportado")
        return
    
    # Get email
    email = input("Email: ").strip()
    if not email:
        print("‚ùå Email requerido")
        return
    
    # Get password
    password = getpass.getpass("Contrase√±a de aplicaci√≥n: ")
    if not password:
        print("‚ùå Contrase√±a requerida")
        return
    
    # Get configuration
    config = get_provider_config(provider, email, password)
    if not config:
        print("‚ùå Error obteniendo configuraci√≥n")
        return
    
    print()
    print("üìã Configuraci√≥n:")
    print(f"   Servidor SMTP: {config['smtp_server']}")
    print(f"   Puerto: {config['smtp_port']}")
    print(f"   Email: {config['sender_email']}")
    print(f"   TLS: {config['use_tls']}")
    print()
    
    # Test connection
    if test_smtp_connection(config):
        # Save configuration
        if save_config(config):
            print()
            print("üéâ ¬°Configuraci√≥n completada exitosamente!")
            print()
            print("üìã Pr√≥ximos pasos:")
            print("1. Ejecutar: python3 app.py")
            print("2. Ir a: http://localhost:5001")
            print("3. Seleccionar un paciente")
            print("4. Hacer clic en 'Email Report'")
            print("5. Probar env√≠o de email")
            print()
            print("üìö Para m√°s informaci√≥n, consulta: EMAIL_SETUP.md")
        else:
            print("‚ùå Error guardando configuraci√≥n")
    else:
        print()
        print("üîß Soluci√≥n de problemas:")
        print("1. Verificar que la contrase√±a de aplicaci√≥n sea correcta")
        print("2. Verificar que 2FA est√© habilitado (Gmail)")
        print("3. Verificar conexi√≥n a internet")
        print("4. Consultar EMAIL_SETUP.md para m√°s detalles")

if __name__ == "__main__":
    main() 